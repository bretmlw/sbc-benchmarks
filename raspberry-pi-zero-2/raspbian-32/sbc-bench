sbc-bench v0.8.1 Raspberry Pi Zero 2 Rev 1.0 (Tue, 02 Nov 2021 15:26:48 +0000)

Distributor ID: Raspbian
Description:    Raspbian GNU/Linux 10 (buster)
Release:        10
Codename:       buster
Architecture:   armhf

Raspberry Pi ThreadX version:
Apr 30 2021 13:47:07
Copyright (c) 2012 Broadcom
version d7f29d96450abfc77cd6cf011af1faf1e03e5e56 (clean) (release) (start)

ThreadX configuration (/boot/config.txt):
dtparam=audio=on
[pi4]
dtoverlay=vc4-fkms-v3d
max_framebuffers=2
[all]

Actual ThreadX settings:
aphy_params_current=819
arm_freq=1000
arm_freq_min=600
audio_pwm_mode=514
config_hdmi_boost=5
core_freq=400
desired_osc_freq=0x325aa0
disable_commandline_tags=2
disable_l2cache=1
display_hdmi_rotate=-1
display_lcd_rotate=-1
dphy_params_current=547
dvfs=2
enable_tvout=1
force_eeprom_read=1
force_pwm_open=1
framebuffer_ignore_alpha=1
framebuffer_swap=1
gpu_freq=300
ignore_lcd=1
init_uart_clock=0x2dc6c00
max_framebuffers=-1
over_voltage_avs=6250
pause_burst_frames=1
program_serial_random=1
sdram_freq=450
total_mem=512
hdmi_force_cec_address:0=65535
hdmi_force_cec_address:1=65535
hdmi_pixel_freq_limit:0=0x9a7ec80

/usr/bin/gcc (Raspbian 8.3.0-6+rpi1) 8.3.0

Uptime: 15:26:48 up 23 min,  1 user,  load average: 1.06, 1.00, 0.79

Linux 5.10.17-v7+ (raspberrypi)         11/02/21        _armv7l_        (4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          15.34    0.02    2.59    1.69    0.00   80.36

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          28.57       409.93       974.04     576290    1369328

              total        used        free      shared  buff/cache   available
Mem:          428Mi        36Mi       118Mi       0.0Ki       273Mi       336Mi
Swap:          99Mi        10Mi        89Mi

Filename                                Type            Size    Used    Priority
/var/swap                               file            102396  10752   -2

##########################################################################

Checking cpufreq OPP:

Cpufreq OPP: 1000  ThreadX: 1000  Measured: 999.026/999.026/998.965 @ 1.2063V
Cpufreq OPP:  900  ThreadX:  900  Measured: 897.887/901.236/899.225 @ 1.2063V
Cpufreq OPP:  800  ThreadX:  800  Measured: 799.028/799.077/798.642 @ 1.2063V
Cpufreq OPP:  700  ThreadX:  700  Measured: 699.153/698.939/698.998 @ 1.2063V
Cpufreq OPP:  600  ThreadX:  600  Measured: 599.144/598.784/599.049 @ 1.2V

##########################################################################

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1255.9 MB/s (0.6%)
 C copy backwards (32 byte blocks)                    :   1254.2 MB/s
 C copy backwards (64 byte blocks)                    :   1245.8 MB/s
 C copy                                               :   1260.7 MB/s
 C copy prefetched (32 bytes step)                    :   1295.9 MB/s
 C copy prefetched (64 bytes step)                    :   1296.2 MB/s (0.4%)
 C 2-pass copy                                        :   1016.6 MB/s (0.9%)
 C 2-pass copy prefetched (32 bytes step)             :   1031.9 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   1032.6 MB/s
 C fill                                               :   1671.9 MB/s (0.3%)
 C fill (shuffle within 16 byte blocks)               :   1669.9 MB/s (0.2%)
 C fill (shuffle within 32 byte blocks)               :   1673.7 MB/s (0.3%)
 C fill (shuffle within 64 byte blocks)               :   1672.2 MB/s (0.2%)
 ---
 standard memcpy                                      :   1283.2 MB/s
 standard memset                                      :   1674.2 MB/s (0.2%)
 ---
 NEON read                                            :   2187.0 MB/s (0.4%)
 NEON read prefetched (32 bytes step)                 :   2386.1 MB/s
 NEON read prefetched (64 bytes step)                 :   2385.5 MB/s
 NEON read 2 data streams                             :   1971.5 MB/s (1.5%)
 NEON read 2 data streams prefetched (32 bytes step)  :   2059.7 MB/s
 NEON read 2 data streams prefetched (64 bytes step)  :   2034.2 MB/s
 NEON copy                                            :   1264.2 MB/s (0.7%)
 NEON copy prefetched (32 bytes step)                 :   1293.9 MB/s
 NEON copy prefetched (64 bytes step)                 :   1293.6 MB/s
 NEON unrolled copy                                   :   1264.9 MB/s (1.2%)
 NEON unrolled copy prefetched (32 bytes step)        :   1291.6 MB/s
 NEON unrolled copy prefetched (64 bytes step)        :   1293.0 MB/s (0.4%)
 NEON copy backwards                                  :   1245.6 MB/s (0.8%)
 NEON copy backwards prefetched (32 bytes step)       :   1280.6 MB/s
 NEON copy backwards prefetched (64 bytes step)       :   1280.2 MB/s (1.4%)
 NEON 2-pass copy                                     :   1022.8 MB/s
 NEON 2-pass copy prefetched (32 bytes step)          :   1055.0 MB/s
 NEON 2-pass copy prefetched (64 bytes step)          :   1049.2 MB/s
 NEON unrolled 2-pass copy                            :   1008.0 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :   1041.9 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   1035.2 MB/s
 NEON fill                                            :   1673.0 MB/s (0.4%)
 NEON fill backwards                                  :   1661.2 MB/s
 VFP copy                                             :   1265.8 MB/s
 VFP 2-pass copy                                      :   1003.8 MB/s
 ARM fill (STRD)                                      :   1668.1 MB/s (0.3%)
 ARM fill (STM with 8 registers)                      :   1669.0 MB/s (0.3%)
 ARM fill (STM with 4 registers)                      :   1667.7 MB/s (0.2%)
 ARM copy prefetched (incr pld)                       :   1289.9 MB/s
 ARM copy prefetched (wrap pld)                       :   1289.7 MB/s
 ARM 2-pass copy prefetched (incr pld)                :   1042.0 MB/s (1.8%)
 ARM 2-pass copy prefetched (wrap pld)                :   1036.5 MB/s

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                         :     68.3 MB/s
 NEON copy (from framebuffer)                         :     65.6 MB/s
 NEON 2-pass copy (from framebuffer)                  :     66.6 MB/s
 NEON unrolled copy (from framebuffer)                :     67.5 MB/s
 NEON 2-pass unrolled copy (from framebuffer)         :     65.9 MB/s
 VFP copy (from framebuffer)                          :    437.0 MB/s
 VFP 2-pass copy (from framebuffer)                   :    384.4 MB/s (1.1%)
 ARM copy (from framebuffer)                          :    213.9 MB/s (0.1%)
 ARM 2-pass copy (from framebuffer)                   :    220.3 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns
      2048 :    0.0 ns          /     0.0 ns
      4096 :    0.0 ns          /     0.0 ns
      8192 :    0.0 ns          /     0.0 ns
     16384 :    0.0 ns          /     0.0 ns
     32768 :    0.0 ns          /     0.0 ns
     65536 :    6.4 ns          /    11.0 ns
    131072 :    9.9 ns          /    15.7 ns
    262144 :   11.6 ns          /    17.7 ns
    524288 :   14.6 ns          /    23.0 ns
   1048576 :   80.9 ns          /   125.4 ns
   2097152 :  118.4 ns          /   162.8 ns
   4194304 :  142.9 ns          /   183.5 ns
   8388608 :  155.8 ns          /   192.9 ns
  16777216 :  164.3 ns          /   199.1 ns
  33554432 :  170.1 ns          /   204.0 ns
  67108864 :  173.7 ns          /   207.0 ns

##########################################################################

OpenSSL 1.1.1d, built on 10 Sep 2019
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      24271.03k    34352.45k    38286.34k    39511.04k    40042.50k    40053.42k
aes-128-cbc      24188.83k    34340.14k    38423.89k    39508.99k    39723.01k    39791.27k
aes-192-cbc      22044.42k    29748.25k    32978.52k    33847.64k    33944.92k    34127.87k
aes-192-cbc      22060.12k    29759.04k    32827.56k    33848.32k    34116.95k    33991.34k
aes-256-cbc      20372.18k    26882.88k    29209.77k    30029.14k    30217.56k    30255.79k
aes-256-cbc      20275.79k    26883.22k    29345.11k    29903.19k    30231.21k    30250.33k

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   922   929   998   998   999   998   998   997

RAM size:     428 MB,  # CPU hardware threads:   4
RAM usage:    234 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        596   100    581    580  |      13081   100   1117   1116
23:        581   100    593    592  |      12798   100   1108   1107
----------------------------------  | ------------------------------
Avr:             100    587    586  |              100   1113   1112
Tot:             100    850    849

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   978   928   936   998   998   998   998   998

RAM size:     428 MB,  # CPU hardware threads:   4
RAM usage:    234 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1785   317    548   1737  |      52080   398   1115   4443
23:       1635   298    560   1666  |      51115   399   1109   4423
----------------------------------  | ------------------------------
Avr:             307    554   1702  |              399   1112   4433
Tot:             353    833   3067

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   997   998   999   998   999   998   998   998

RAM size:     428 MB,  # CPU hardware threads:   4
RAM usage:    234 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1787   317    548   1739  |      52213   399   1116   4455
23:       1742   318    558   1776  |      51080   399   1108   4420
----------------------------------  | ------------------------------
Avr:             318    553   1757  |              399   1112   4437
Tot:             358    833   3097

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   998   998   989   998   998   998   999   998

RAM size:     428 MB,  # CPU hardware threads:   4
RAM usage:    234 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1762   312    549   1715  |      52118   399   1115   4447
23:       1751   321    556   1784  |      50992   398   1107   4412
----------------------------------  | ------------------------------
Avr:             317    552   1750  |              399   1111   4429
Tot:             358    832   3089

Compression: 1702,1757,1750
Decompression: 4433,4437,4429
Total: 3067,3097,3089

##########################################################################

Testing clockspeeds again. System health now:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
15:38:25: 1000/1000MHz  3.48  78%   1%  77%   0%   0%   0%  52.1°C  1.2063V

Checking cpufreq OPP:

Cpufreq OPP: 1000  ThreadX: 1000  Measured: 998.277/999.243/996.316 @ 1.2063V
Cpufreq OPP:  900  ThreadX:  900  Measured: 898.355/899.196/899.255 @ 1.2063V
Cpufreq OPP:  800  ThreadX:  800  Measured: 799.115/792.515/799.212 @ 1.2063V
Cpufreq OPP:  700  ThreadX:  700  Measured: 699.530/696.854/696.751 @ 1.2063V
Cpufreq OPP:  600  ThreadX:  600  Measured: 590.271/597.843/597.607 @ 1.2V

##########################################################################

System health while running tinymembench:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
15:26:53: 1000/1000MHz  1.06  19%   2%  15%   0%   1%   0%  42.9°C  1.2063V
15:28:53: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  46.2°C  1.2063V
15:30:53: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C  1.2063V
15:32:53: 1000/1000MHz  1.00  25%   0%  24%   0%   0%   0%  42.9°C  1.2063V

System health while running OpenSSL benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
15:34:24: 1000/1000MHz  1.00  20%   1%  17%   0%   1%   0%  42.9°C  1.2063V
15:34:34: 1000/1000MHz  1.00  25%   0%  24%   0%   0%   0%  43.5°C  1.2063V
15:34:44: 1000/1000MHz  1.00  25%   0%  24%   0%   0%   0%  43.5°C  1.2063V
15:34:54: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  43.5°C  1.2063V
15:35:04: 1000/1000MHz  1.00  25%   0%  24%   0%   0%   0%  44.0°C  1.2063V
15:35:14: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  43.5°C  1.2063V
15:35:24: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  43.5°C  1.2063V
15:35:34: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  43.5°C  1.2063V
15:35:45: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  44.5°C  1.2063V
15:35:55: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C  1.2063V
15:36:05: 1000/1000MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C  1.2063V

System health while running 7-zip single core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
15:36:12: 1000/1000MHz  1.00  21%   1%  18%   0%   1%   0%  44.0°C  1.2063V
15:37:12: 1000/1000MHz  2.37  25%   0%  24%   0%   0%   0%  44.0°C  1.2063V

System health while running 7-zip multi core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
15:37:24: 1000/1000MHz  2.62  21%   1%  18%   0%   1%   0%  43.5°C  1.2063V
15:37:44: 1000/1000MHz  2.81  75%   1%  73%   0%   0%   0%  49.4°C  1.2063V
15:38:05: 1000/1000MHz  3.08  77%   1%  75%   0%   0%   0%  51.5°C  1.2063V
15:38:25: 1000/1000MHz  3.48  78%   1%  77%   0%   0%   0%  52.1°C  1.2063V

##########################################################################

dmesg output while running the benchmarks:

[ 1501.794194] IPv6: MLD: clamping QRV from 1 to 2!
[ 1626.726281] IPv6: MLD: clamping QRV from 1 to 2!
[ 1751.754929] IPv6: MLD: clamping QRV from 1 to 2!
[ 1876.784973] IPv6: MLD: clamping QRV from 1 to 2!
[ 2001.815739] IPv6: MLD: clamping QRV from 1 to 2!

##########################################################################

Linux 5.10.17-v7+ (raspberrypi)         11/02/21        _armv7l_        (4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          20.41    0.02    1.87    1.13    0.00   76.57

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          19.36       276.00       650.64     584746    1378492

              total        used        free      shared  buff/cache   available
Mem:          428Mi        96Mi       229Mi       0.0Ki       103Mi       279Mi
Swap:          99Mi        16Mi        83Mi

Filename                                Type            Size    Used    Priority
/var/swap                               file            102396  16896   -2

Architecture:        armv7l
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
Vendor ID:           ARM
Model:               4
Model name:          Cortex-A53
Stepping:            r0p4
CPU max MHz:         1000.0000
CPU min MHz:         600.0000
BogoMIPS:            64.00
Flags:               half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32
